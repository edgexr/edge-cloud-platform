// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: alldata.proto

package testutil

import (
	"context"
	fmt "fmt"
	edgeproto "github.com/edgexr/edge-cloud-platform/api/edgeproto"
	_ "github.com/edgexr/edge-cloud-platform/tools/protogen"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	"testing"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT
type AllDataOut struct {
	Flavors                    []edgeproto.Result
	Settings                   *edgeproto.Result
	OperatorCodes              []edgeproto.Result
	ResTagTables               []edgeproto.Result
	TrustPolicies              [][]edgeproto.Result
	GpuDrivers                 [][]edgeproto.Result
	PlatformFeatures           []edgeproto.Result
	Zones                      []edgeproto.Result
	Cloudlets                  [][]edgeproto.Result
	CloudletInfos              []edgeproto.Result
	ZonePools                  []edgeproto.Result
	Nodes                      []edgeproto.Result
	Networks                   [][]edgeproto.Result
	AutoProvPolicies           []edgeproto.Result
	AutoProvPolicyZones        []edgeproto.Result
	AutoScalePolicies          []edgeproto.Result
	IdleReservableClusterInsts *edgeproto.Result
	ClusterInsts               [][]edgeproto.Result
	Apps                       []edgeproto.Result
	AppInstances               [][]edgeproto.Result
	VmPools                    []edgeproto.Result
	AlertPolicies              []edgeproto.Result
	FlowRateLimitSettings      []edgeproto.Result
	MaxReqsRateLimitSettings   []edgeproto.Result
	TrustPolicyExceptions      []edgeproto.Result
	Errors                     []Err
}

// used to intersperse other creates/deletes/checks
// note the objs value is the previous one for create,
// but the next one for delete
type RunAllDataApiCallback func(objs string)

func RunAllDataApis(run *Run, in *edgeproto.AllData, inMap map[string]interface{}, out *AllDataOut, apicb RunAllDataApiCallback) {
	apicb("")
	run.FlavorApi(&in.Flavors, inMap["flavors"], &out.Flavors)
	apicb("flavors")
	run.SettingsApi(in.Settings, inMap["settings"], &out.Settings)
	apicb("settings")
	run.OperatorCodeApi(&in.OperatorCodes, inMap["operatorcodes"], &out.OperatorCodes)
	apicb("operatorcodes")
	run.ResTagTableApi(&in.ResTagTables, inMap["restagtables"], &out.ResTagTables)
	apicb("restagtables")
	run.TrustPolicyApi(&in.TrustPolicies, inMap["trustpolicies"], &out.TrustPolicies)
	apicb("trustpolicies")
	run.GPUDriverApi(&in.GpuDrivers, inMap["gpudrivers"], &out.GpuDrivers)
	apicb("gpudrivers")
	run.PlatformFeaturesApi(&in.PlatformFeatures, inMap["platformfeatures"], &out.PlatformFeatures)
	apicb("platformfeatures")
	run.ZoneApi(&in.Zones, inMap["zones"], &out.Zones)
	apicb("zones")
	run.CloudletApi(&in.Cloudlets, inMap["cloudlets"], &out.Cloudlets)
	apicb("cloudlets")
	run.CloudletInfoApi(&in.CloudletInfos, inMap["cloudletinfos"], &out.CloudletInfos)
	apicb("cloudletinfos")
	run.ZonePoolApi(&in.ZonePools, inMap["zonepools"], &out.ZonePools)
	apicb("zonepools")
	run.NodeApi(&in.Nodes, inMap["nodes"], &out.Nodes)
	apicb("nodes")
	run.NetworkApi(&in.Networks, inMap["networks"], &out.Networks)
	apicb("networks")
	run.AutoProvPolicyApi(&in.AutoProvPolicies, inMap["autoprovpolicies"], &out.AutoProvPolicies)
	apicb("autoprovpolicies")
	run.AutoProvPolicyApi_AutoProvPolicyZone(&in.AutoProvPolicyZones, inMap["autoprovpolicyzones"], &out.AutoProvPolicyZones)
	apicb("autoprovpolicyzones")
	run.AutoScalePolicyApi(&in.AutoScalePolicies, inMap["autoscalepolicies"], &out.AutoScalePolicies)
	apicb("autoscalepolicies")
	run.ClusterInstApi_IdleReservableClusterInsts(in.IdleReservableClusterInsts, inMap["idlereservableclusterinsts"], &out.IdleReservableClusterInsts)
	apicb("idlereservableclusterinsts")
	run.ClusterInstApi(&in.ClusterInsts, inMap["clusterinsts"], &out.ClusterInsts)
	apicb("clusterinsts")
	run.AppApi(&in.Apps, inMap["apps"], &out.Apps)
	apicb("apps")
	run.AppInstApi(&in.AppInstances, inMap["appinstances"], &out.AppInstances)
	apicb("appinstances")
	run.VMPoolApi(&in.VmPools, inMap["vmpools"], &out.VmPools)
	apicb("vmpools")
	run.AlertPolicyApi(&in.AlertPolicies, inMap["alertpolicies"], &out.AlertPolicies)
	apicb("alertpolicies")
	run.RateLimitSettingsApi_FlowRateLimitSettings(&in.FlowRateLimitSettings, inMap["flowratelimitsettings"], &out.FlowRateLimitSettings)
	apicb("flowratelimitsettings")
	run.RateLimitSettingsApi_MaxReqsRateLimitSettings(&in.MaxReqsRateLimitSettings, inMap["maxreqsratelimitsettings"], &out.MaxReqsRateLimitSettings)
	apicb("maxreqsratelimitsettings")
	run.TrustPolicyExceptionApi(&in.TrustPolicyExceptions, inMap["trustpolicyexceptions"], &out.TrustPolicyExceptions)
	apicb("trustpolicyexceptions")
	out.Errors = run.Errs
}

func RunAllDataReverseApis(run *Run, in *edgeproto.AllData, inMap map[string]interface{}, out *AllDataOut, apicb RunAllDataApiCallback) {
	apicb("trustpolicyexceptions")
	run.TrustPolicyExceptionApi(&in.TrustPolicyExceptions, inMap["trustpolicyexceptions"], &out.TrustPolicyExceptions)
	apicb("maxreqsratelimitsettings")
	run.RateLimitSettingsApi_MaxReqsRateLimitSettings(&in.MaxReqsRateLimitSettings, inMap["maxreqsratelimitsettings"], &out.MaxReqsRateLimitSettings)
	apicb("flowratelimitsettings")
	run.RateLimitSettingsApi_FlowRateLimitSettings(&in.FlowRateLimitSettings, inMap["flowratelimitsettings"], &out.FlowRateLimitSettings)
	apicb("alertpolicies")
	run.AlertPolicyApi(&in.AlertPolicies, inMap["alertpolicies"], &out.AlertPolicies)
	apicb("vmpools")
	run.VMPoolApi(&in.VmPools, inMap["vmpools"], &out.VmPools)
	apicb("appinstances")
	run.AppInstApi(&in.AppInstances, inMap["appinstances"], &out.AppInstances)
	apicb("apps")
	run.AppApi(&in.Apps, inMap["apps"], &out.Apps)
	apicb("clusterinsts")
	run.ClusterInstApi(&in.ClusterInsts, inMap["clusterinsts"], &out.ClusterInsts)
	apicb("idlereservableclusterinsts")
	run.ClusterInstApi_IdleReservableClusterInsts(in.IdleReservableClusterInsts, inMap["idlereservableclusterinsts"], &out.IdleReservableClusterInsts)
	apicb("autoscalepolicies")
	run.AutoScalePolicyApi(&in.AutoScalePolicies, inMap["autoscalepolicies"], &out.AutoScalePolicies)
	apicb("autoprovpolicyzones")
	run.AutoProvPolicyApi_AutoProvPolicyZone(&in.AutoProvPolicyZones, inMap["autoprovpolicyzones"], &out.AutoProvPolicyZones)
	apicb("autoprovpolicies")
	run.AutoProvPolicyApi(&in.AutoProvPolicies, inMap["autoprovpolicies"], &out.AutoProvPolicies)
	apicb("networks")
	run.NetworkApi(&in.Networks, inMap["networks"], &out.Networks)
	apicb("nodes")
	run.NodeApi(&in.Nodes, inMap["nodes"], &out.Nodes)
	apicb("zonepools")
	run.ZonePoolApi(&in.ZonePools, inMap["zonepools"], &out.ZonePools)
	apicb("cloudletinfos")
	run.CloudletInfoApi(&in.CloudletInfos, inMap["cloudletinfos"], &out.CloudletInfos)
	apicb("cloudlets")
	run.CloudletApi(&in.Cloudlets, inMap["cloudlets"], &out.Cloudlets)
	apicb("zones")
	run.ZoneApi(&in.Zones, inMap["zones"], &out.Zones)
	apicb("platformfeatures")
	run.PlatformFeaturesApi(&in.PlatformFeatures, inMap["platformfeatures"], &out.PlatformFeatures)
	apicb("gpudrivers")
	run.GPUDriverApi(&in.GpuDrivers, inMap["gpudrivers"], &out.GpuDrivers)
	apicb("trustpolicies")
	run.TrustPolicyApi(&in.TrustPolicies, inMap["trustpolicies"], &out.TrustPolicies)
	apicb("restagtables")
	run.ResTagTableApi(&in.ResTagTables, inMap["restagtables"], &out.ResTagTables)
	apicb("operatorcodes")
	run.OperatorCodeApi(&in.OperatorCodes, inMap["operatorcodes"], &out.OperatorCodes)
	apicb("settings")
	run.SettingsApi(in.Settings, inMap["settings"], &out.Settings)
	apicb("flavors")
	run.FlavorApi(&in.Flavors, inMap["flavors"], &out.Flavors)
	apicb("")
	out.Errors = run.Errs
}

func RunAllDataShowApis(run *Run, in *edgeproto.AllData, selector edgeproto.AllSelector, out *edgeproto.AllData) {
	if selector.Has("flavors") {
		run.FlavorApi(&in.Flavors, nil, &out.Flavors)
	}
	if selector.Has("settings") {
		run.SettingsApi(in.Settings, nil, &out.Settings)
	}
	if selector.Has("operatorcodes") {
		run.OperatorCodeApi(&in.OperatorCodes, nil, &out.OperatorCodes)
	}
	if selector.Has("restagtables") {
		run.ResTagTableApi(&in.ResTagTables, nil, &out.ResTagTables)
	}
	if selector.Has("trustpolicies") {
		run.TrustPolicyApi(&in.TrustPolicies, nil, &out.TrustPolicies)
	}
	if selector.Has("gpudrivers") {
		run.GPUDriverApi(&in.GpuDrivers, nil, &out.GpuDrivers)
	}
	if selector.Has("platformfeatures") {
		run.PlatformFeaturesApi(&in.PlatformFeatures, nil, &out.PlatformFeatures)
	}
	if selector.Has("zones") {
		run.ZoneApi(&in.Zones, nil, &out.Zones)
	}
	if selector.Has("cloudlets") {
		run.CloudletApi(&in.Cloudlets, nil, &out.Cloudlets)
	}
	if selector.Has("cloudletinfos") {
		run.CloudletInfoApi(&in.CloudletInfos, nil, &out.CloudletInfos)
	}
	if selector.Has("zonepools") {
		run.ZonePoolApi(&in.ZonePools, nil, &out.ZonePools)
	}
	if selector.Has("nodes") {
		run.NodeApi(&in.Nodes, nil, &out.Nodes)
	}
	if selector.Has("cloudletnoderefs") {
		run.CloudletNodeRefsApi(&in.CloudletNodeRefs, nil, &out.CloudletNodeRefs)
	}
	if selector.Has("networks") {
		run.NetworkApi(&in.Networks, nil, &out.Networks)
	}
	if selector.Has("autoprovpolicies") {
		run.AutoProvPolicyApi(&in.AutoProvPolicies, nil, &out.AutoProvPolicies)
	}
	if selector.Has("autoscalepolicies") {
		run.AutoScalePolicyApi(&in.AutoScalePolicies, nil, &out.AutoScalePolicies)
	}
	if selector.Has("clusterinsts") {
		run.ClusterInstApi(&in.ClusterInsts, nil, &out.ClusterInsts)
	}
	if selector.Has("apps") {
		run.AppApi(&in.Apps, nil, &out.Apps)
	}
	if selector.Has("appinstances") {
		run.AppInstApi(&in.AppInstances, nil, &out.AppInstances)
	}
	if selector.Has("appinstrefs") {
		run.AppInstRefsApi(&in.AppInstRefs, nil, &out.AppInstRefs)
	}
	if selector.Has("clusterrefs") {
		run.ClusterRefsApi(&in.ClusterRefs, nil, &out.ClusterRefs)
	}
	if selector.Has("vmpools") {
		run.VMPoolApi(&in.VmPools, nil, &out.VmPools)
	}
	if selector.Has("alertpolicies") {
		run.AlertPolicyApi(&in.AlertPolicies, nil, &out.AlertPolicies)
	}
	if selector.Has("flowratelimitsettings") {
		run.RateLimitSettingsApi_FlowRateLimitSettings(&in.FlowRateLimitSettings, nil, &out.FlowRateLimitSettings)
	}
	if selector.Has("maxreqsratelimitsettings") {
		run.RateLimitSettingsApi_MaxReqsRateLimitSettings(&in.MaxReqsRateLimitSettings, nil, &out.MaxReqsRateLimitSettings)
	}
	if selector.Has("trustpolicyexceptions") {
		run.TrustPolicyExceptionApi(&in.TrustPolicyExceptions, nil, &out.TrustPolicyExceptions)
	}
}

func DeleteAllAllDataInternal(t *testing.T, ctx context.Context, apis InternalCUDAPIs, in *edgeproto.AllData) {
	InternalTrustPolicyExceptionDeleteAll(t, ctx, apis.GetTrustPolicyExceptionApi(), in.TrustPolicyExceptions)
	InternalAlertPolicyDeleteAll(t, ctx, apis.GetAlertPolicyApi(), in.AlertPolicies)
	InternalVMPoolDeleteAll(t, ctx, apis.GetVMPoolApi(), in.VmPools)
	InternalAppInstDeleteAll(t, ctx, apis.GetAppInstApi(), in.AppInstances)
	InternalAppDeleteAll(t, ctx, apis.GetAppApi(), in.Apps)
	InternalClusterInstDeleteAll(t, ctx, apis.GetClusterInstApi(), in.ClusterInsts)
	InternalAutoScalePolicyDeleteAll(t, ctx, apis.GetAutoScalePolicyApi(), in.AutoScalePolicies)
	InternalAutoProvPolicyDeleteAll(t, ctx, apis.GetAutoProvPolicyApi(), in.AutoProvPolicies)
	InternalNetworkDeleteAll(t, ctx, apis.GetNetworkApi(), in.Networks)
	InternalNodeDeleteAll(t, ctx, apis.GetNodeApi(), in.Nodes)
	InternalZonePoolDeleteAll(t, ctx, apis.GetZonePoolApi(), in.ZonePools)
	InternalCloudletDeleteAll(t, ctx, apis.GetCloudletApi(), in.Cloudlets)
	InternalZoneDeleteAll(t, ctx, apis.GetZoneApi(), in.Zones)
	InternalGPUDriverDeleteAll(t, ctx, apis.GetGPUDriverApi(), in.GpuDrivers)
	InternalTrustPolicyDeleteAll(t, ctx, apis.GetTrustPolicyApi(), in.TrustPolicies)
	InternalResTagTableDeleteAll(t, ctx, apis.GetResTagTableApi(), in.ResTagTables)
	InternalOperatorCodeDeleteAll(t, ctx, apis.GetOperatorCodeApi(), in.OperatorCodes)
	InternalFlavorDeleteAll(t, ctx, apis.GetFlavorApi(), in.Flavors)
}
