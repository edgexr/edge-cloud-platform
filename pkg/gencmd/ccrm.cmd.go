// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ccrm.proto

package gencmd

import (
	fmt "fmt"
	_ "github.com/edgexr/edge-cloud-platform/tools/protogen"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT
var StreamStatusRequiredArgs = []string{}
var StreamStatusOptionalArgs = []string{
	"cacheupdatetype",
	"status",
}
var StreamStatusAliasArgs = []string{}
var StreamStatusComments = map[string]string{
	"cacheupdatetype": "Cache update type",
	"status":          "Status value",
}
var StreamStatusSpecialArgs = map[string]string{}
var InfraResourceMapRequiredArgs = []string{}
var InfraResourceMapOptionalArgs = []string{}
var InfraResourceMapAliasArgs = []string{}
var InfraResourceMapComments = map[string]string{}
var InfraResourceMapSpecialArgs = map[string]string{}
var ClusterResourcesReqRequiredArgs = []string{}
var ClusterResourcesReqOptionalArgs = []string{
	"cloudletkey.organization",
	"cloudletkey.name",
	"cloudletkey.federatedorganization",
	"vmresources:#.key.clusterkey.name",
	"vmresources:#.key.clusterkey.organization",
	"vmresources:#.key.cloudletkey.organization",
	"vmresources:#.key.cloudletkey.name",
	"vmresources:#.key.cloudletkey.federatedorganization",
	"vmresources:#.vmflavor.name",
	"vmresources:#.vmflavor.vcpus",
	"vmresources:#.vmflavor.ram",
	"vmresources:#.vmflavor.disk",
	"vmresources:#.vmflavor.propmap",
	"vmresources:#.type",
	"vmresources:#.appaccesstype",
}
var ClusterResourcesReqAliasArgs = []string{}
var ClusterResourcesReqComments = map[string]string{
	"cloudletkey.organization":                            "Organization of the cloudlet site",
	"cloudletkey.name":                                    "Name of the cloudlet",
	"cloudletkey.federatedorganization":                   "Federated operator organization who shared this cloudlet",
	"vmresources:#.key.clusterkey.name":                   "Cluster name",
	"vmresources:#.key.clusterkey.organization":           "Name of the organization that this cluster belongs to",
	"vmresources:#.key.cloudletkey.organization":          "Organization of the cloudlet site",
	"vmresources:#.key.cloudletkey.name":                  "Name of the cloudlet",
	"vmresources:#.key.cloudletkey.federatedorganization": "Federated operator organization who shared this cloudlet",
	"vmresources:#.vmflavor.name":                         "Name of the flavor on the Cloudlet",
	"vmresources:#.vmflavor.vcpus":                        "Number of VCPU cores on the Cloudlet",
	"vmresources:#.vmflavor.ram":                          "Ram in MB on the Cloudlet",
	"vmresources:#.vmflavor.disk":                         "Amount of disk in GB on the Cloudlet",
	"vmresources:#.vmflavor.propmap":                      "OS Flavor Properties, if any",
	"vmresources:#.type":                                  "Resource Type can be platform, rootlb, cluster-master, cluster-k8s-node, cluster-docker-node, appvm, k8s-lb-svc",
	"vmresources:#.appaccesstype":                         "(deprecated) Access type for resource of type App VM, one of DefaultForDeployment, Direct, LoadBalancer",
}
var ClusterResourcesReqSpecialArgs = map[string]string{
	"vmresources:#.vmflavor.propmap": "StringToString",
}
var ClusterResourceMetricReqRequiredArgs = []string{}
var ClusterResourceMetricReqOptionalArgs = []string{
	"cloudletkey.organization",
	"cloudletkey.name",
	"cloudletkey.federatedorganization",
	"resmetric.name",
	"resmetric.timestamp.seconds",
	"resmetric.timestamp.nanos",
	"resmetric.tags:#.name",
	"resmetric.tags:#.val",
	"resmetric.vals:#.name",
	"vmresources:#.key.clusterkey.name",
	"vmresources:#.key.clusterkey.organization",
	"vmresources:#.key.cloudletkey.organization",
	"vmresources:#.key.cloudletkey.name",
	"vmresources:#.key.cloudletkey.federatedorganization",
	"vmresources:#.vmflavor.name",
	"vmresources:#.vmflavor.vcpus",
	"vmresources:#.vmflavor.ram",
	"vmresources:#.vmflavor.disk",
	"vmresources:#.vmflavor.propmap",
	"vmresources:#.type",
	"vmresources:#.appaccesstype",
}
var ClusterResourceMetricReqAliasArgs = []string{}
var ClusterResourceMetricReqComments = map[string]string{
	"cloudletkey.organization":                            "Organization of the cloudlet site",
	"cloudletkey.name":                                    "Name of the cloudlet",
	"cloudletkey.federatedorganization":                   "Federated operator organization who shared this cloudlet",
	"resmetric.name":                                      "Metric name",
	"resmetric.timestamp.seconds":                         "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
	"resmetric.timestamp.nanos":                           "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
	"resmetric.tags:#.name":                               "Metric tag name",
	"resmetric.tags:#.val":                                "Metric tag value",
	"resmetric.vals:#.name":                               "Name of the value",
	"vmresources:#.key.clusterkey.name":                   "Cluster name",
	"vmresources:#.key.clusterkey.organization":           "Name of the organization that this cluster belongs to",
	"vmresources:#.key.cloudletkey.organization":          "Organization of the cloudlet site",
	"vmresources:#.key.cloudletkey.name":                  "Name of the cloudlet",
	"vmresources:#.key.cloudletkey.federatedorganization": "Federated operator organization who shared this cloudlet",
	"vmresources:#.vmflavor.name":                         "Name of the flavor on the Cloudlet",
	"vmresources:#.vmflavor.vcpus":                        "Number of VCPU cores on the Cloudlet",
	"vmresources:#.vmflavor.ram":                          "Ram in MB on the Cloudlet",
	"vmresources:#.vmflavor.disk":                         "Amount of disk in GB on the Cloudlet",
	"vmresources:#.vmflavor.propmap":                      "OS Flavor Properties, if any",
	"vmresources:#.type":                                  "Resource Type can be platform, rootlb, cluster-master, cluster-k8s-node, cluster-docker-node, appvm, k8s-lb-svc",
	"vmresources:#.appaccesstype":                         "(deprecated) Access type for resource of type App VM, one of DefaultForDeployment, Direct, LoadBalancer",
}
var ClusterResourceMetricReqSpecialArgs = map[string]string{
	"vmresources:#.vmflavor.propmap": "StringToString",
}
var NameSanitizeReqRequiredArgs = []string{}
var NameSanitizeReqOptionalArgs = []string{
	"cloudletkey.organization",
	"cloudletkey.name",
	"cloudletkey.federatedorganization",
	"message",
}
var NameSanitizeReqAliasArgs = []string{}
var NameSanitizeReqComments = map[string]string{
	"cloudletkey.organization":          "Organization of the cloudlet site",
	"cloudletkey.name":                  "Name of the cloudlet",
	"cloudletkey.federatedorganization": "Federated operator organization who shared this cloudlet",
	"message":                           "String value",
}
var NameSanitizeReqSpecialArgs = map[string]string{}
