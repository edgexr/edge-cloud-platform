// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: exec.proto

package ormctl

import (
	fmt "fmt"
	edgeproto "github.com/edgexr/edge-cloud-platform/api/edgeproto"
	"github.com/edgexr/edge-cloud-platform/api/ormapi"
	_ "github.com/edgexr/edge-cloud-platform/tools/protogen"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	"strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var RunCommandCmd = &ApiCommand{
	Name:         "RunCommand",
	Use:          "runcommand",
	Short:        "Run a Command or Shell on a container",
	RequiredArgs: "region " + strings.Join(RunCommandRequiredArgs, " "),
	OptionalArgs: strings.Join(RunCommandOptionalArgs, " "),
	AliasArgs:    strings.Join(ExecRequestAliasArgs, " "),
	SpecialArgs:  &ExecRequestSpecialArgs,
	Comments:     addRegionComment(ExecRequestComments),
	NoConfig:     "Offer,Answer,Err,Console.Url,Timeout,AccessUrl,EdgeTurnAddr,Offer,Answer,Err,Timeout,Log,Console,AccessUrl,EdgeTurnAddr,Cmd.CloudletMgmtNode",
	ReqData:      &ormapi.RegionExecRequest{},
	ReplyData:    &edgeproto.ExecRequest{},
	Path:         "/auth/ctrl/RunCommand",
	ProtobufApi:  true,
}

var RunConsoleCmd = &ApiCommand{
	Name:         "RunConsole",
	Use:          "runconsole",
	Short:        "Run console on a VM",
	RequiredArgs: "region " + strings.Join(RunConsoleRequiredArgs, " "),
	OptionalArgs: strings.Join(RunConsoleOptionalArgs, " "),
	AliasArgs:    strings.Join(ExecRequestAliasArgs, " "),
	SpecialArgs:  &ExecRequestSpecialArgs,
	Comments:     addRegionComment(ExecRequestComments),
	NoConfig:     "Offer,Answer,Err,Console.Url,Timeout,AccessUrl,EdgeTurnAddr,Offer,Answer,Err,Timeout,Log,Cmd,Console,ContainerId,AccessUrl,EdgeTurnAddr",
	ReqData:      &ormapi.RegionExecRequest{},
	ReplyData:    &edgeproto.ExecRequest{},
	Path:         "/auth/ctrl/RunConsole",
	ProtobufApi:  true,
}

var ShowLogsCmd = &ApiCommand{
	Name:         "ShowLogs",
	Use:          "showlogs",
	Short:        "View logs for AppInst",
	RequiredArgs: "region " + strings.Join(ShowLogsRequiredArgs, " "),
	OptionalArgs: strings.Join(ShowLogsOptionalArgs, " "),
	AliasArgs:    strings.Join(ExecRequestAliasArgs, " "),
	SpecialArgs:  &ExecRequestSpecialArgs,
	Comments:     addRegionComment(ExecRequestComments),
	NoConfig:     "Offer,Answer,Err,Console.Url,Timeout,AccessUrl,EdgeTurnAddr,Offer,Answer,Err,Timeout,Cmd,Console,AccessUrl,EdgeTurnAddr",
	ReqData:      &ormapi.RegionExecRequest{},
	ReplyData:    &edgeproto.ExecRequest{},
	Path:         "/auth/ctrl/ShowLogs",
	ProtobufApi:  true,
}

var AccessCloudletCmd = &ApiCommand{
	Name:         "AccessCloudlet",
	Use:          "accesscloudlet",
	Short:        "Access Cloudlet VM",
	RequiredArgs: "region " + strings.Join(AccessCloudletRequiredArgs, " "),
	OptionalArgs: strings.Join(AccessCloudletOptionalArgs, " "),
	AliasArgs:    strings.Join(ExecRequestAliasArgs, " "),
	SpecialArgs:  &ExecRequestSpecialArgs,
	Comments:     addRegionComment(ExecRequestComments),
	NoConfig:     "Offer,Answer,Err,Console.Url,Timeout,AccessUrl,EdgeTurnAddr,Offer,Answer,Err,Timeout,Log,Console,ContainerId,AccessUrl,EdgeTurnAddr",
	ReqData:      &ormapi.RegionExecRequest{},
	ReplyData:    &edgeproto.ExecRequest{},
	Path:         "/auth/ctrl/AccessCloudlet",
	ProtobufApi:  true,
}
var ExecApiCmds = []*ApiCommand{
	RunCommandCmd,
	RunConsoleCmd,
	ShowLogsCmd,
	AccessCloudletCmd,
}

const ExecGroup = "Exec"

func init() {
	AllApis.AddGroup(ExecGroup, "Manage Execs", ExecApiCmds)
}

var RunCommandRequiredArgs = []string{
	"appinstname",
	"appinstorg",
	"cloudletorg",
	"cloudlet",
	"command",
}
var RunCommandOptionalArgs = []string{
	"federatedorg",
	"containerid",
	"edgeturnproxyaddr",
}
var RunConsoleRequiredArgs = []string{
	"appinstname",
	"appinstorg",
	"cloudletorg",
	"cloudlet",
}
var RunConsoleOptionalArgs = []string{
	"federatedorg",
	"edgeturnproxyaddr",
}
var ShowLogsRequiredArgs = []string{
	"appinstname",
	"appinstorg",
	"cloudletorg",
	"cloudlet",
}
var ShowLogsOptionalArgs = []string{
	"federatedorg",
	"containerid",
	"since",
	"tail",
	"timestamps",
	"follow",
	"edgeturnproxyaddr",
}
var AccessCloudletRequiredArgs = []string{
	"cloudletorg",
	"cloudlet",
}
var AccessCloudletOptionalArgs = []string{
	"appinstname",
	"appinstorg",
	"federatedorg",
	"command",
	"nodetype",
	"nodename",
	"edgeturnproxyaddr",
}
var ExecRequestRequiredArgs = []string{
	"appinstname",
	"appinstorg",
	"cloudletorg",
	"cloudlet",
}
var ExecRequestOptionalArgs = []string{
	"federatedorg",
	"containerid",
	"command",
	"nodetype",
	"nodename",
	"since",
	"tail",
	"timestamps",
	"follow",
	"edgeturnproxyaddr",
}
var ExecRequestAliasArgs = []string{
	"appinstname=execrequest.appinstkey.name",
	"appinstorg=execrequest.appinstkey.organization",
	"cloudletorg=execrequest.appinstkey.cloudletkey.organization",
	"cloudlet=execrequest.appinstkey.cloudletkey.name",
	"federatedorg=execrequest.appinstkey.cloudletkey.federatedorganization",
	"containerid=execrequest.containerid",
	"offer=execrequest.offer",
	"answer=execrequest.answer",
	"err=execrequest.err",
	"command=execrequest.cmd.command",
	"nodetype=execrequest.cmd.cloudletmgmtnode.type",
	"nodename=execrequest.cmd.cloudletmgmtnode.name",
	"since=execrequest.log.since",
	"tail=execrequest.log.tail",
	"timestamps=execrequest.log.timestamps",
	"follow=execrequest.log.follow",
	"console.url=execrequest.console.url",
	"timeout=execrequest.timeout",
	"accessurl=execrequest.accessurl",
	"edgeturnaddr=execrequest.edgeturnaddr",
	"edgeturnproxyaddr=execrequest.edgeturnproxyaddr",
}
var ExecRequestComments = map[string]string{
	"appinstname":       "App Instance name",
	"appinstorg":        "App Instance organization",
	"cloudletorg":       "Organization of the cloudlet site",
	"cloudlet":          "Name of the cloudlet",
	"federatedorg":      "Federated operator organization who shared this cloudlet",
	"containerid":       "ContainerId is the name or ID of the target container, if applicable",
	"offer":             "Offer",
	"answer":            "Answer",
	"err":               "Any error message",
	"command":           "Command or Shell",
	"nodetype":          "Type of Cloudlet Mgmt Node",
	"nodename":          "Name of Cloudlet Mgmt Node",
	"since":             "Show logs since either a duration ago (5s, 2m, 3h) or a timestamp (RFC3339)",
	"tail":              "Show only a recent number of lines",
	"timestamps":        "Show timestamps",
	"follow":            "Stream data",
	"console.url":       "VM Console URL",
	"timeout":           "Timeout",
	"accessurl":         "Access URL",
	"edgeturnaddr":      "EdgeTurn Server Address",
	"edgeturnproxyaddr": "EdgeTurn Proxy Address",
}
var ExecRequestSpecialArgs = map[string]string{}
