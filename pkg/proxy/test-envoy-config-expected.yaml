
node:
  id: test
  cluster: test
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 5677
    filter_chains:
    - filters:
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: ingress_tcp
          cluster: backend5677
          access_log:
            - name: envoy.access_loggers.file
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /tmp/access.log
                json_format: {
                  "start_time": "%START_TIME%",
                  "duration": "%DURATION%",
                  "bytes_sent": "%BYTES_SENT%",
                  "bytes_received": "%BYTES_RECEIVED%",
                  "client_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
                  "upstream_cluster": "%UPSTREAM_CLUSTER%"
                }
      transport_socket:
        name: "envoy.transport_sockets.tls"
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificate_sds_secret_configs:
                name: envoy.transport_sockets.tls.context
                sds_config:
                    path: /etc/envoy/sds.yaml
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 5678
    filter_chains:
    - filters:
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: ingress_tcp
          cluster: backend5678
          access_log:
            - name: envoy.access_loggers.file
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /tmp/access.log
                json_format: {
                  "start_time": "%START_TIME%",
                  "duration": "%DURATION%",
                  "bytes_sent": "%BYTES_SENT%",
                  "bytes_received": "%BYTES_RECEIVED%",
                  "client_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
                  "upstream_cluster": "%UPSTREAM_CLUSTER%"
                }
      
  - address:
      socket_address:
        address: "::"
        port_value: 5677
    filter_chains:
    - filters:
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: ingress_tcp
          cluster: backend5677ipv6
          access_log:
            - name: envoy.access_loggers.file
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /tmp/access.log
                json_format: {
                  "start_time": "%START_TIME%",
                  "duration": "%DURATION%",
                  "bytes_sent": "%BYTES_SENT%",
                  "bytes_received": "%BYTES_RECEIVED%",
                  "client_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
                  "upstream_cluster": "%UPSTREAM_CLUSTER%"
                }
      transport_socket:
        name: "envoy.transport_sockets.tls"
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificate_sds_secret_configs:
                name: envoy.transport_sockets.tls.context
                sds_config:
                    path: /etc/envoy/sds.yaml
  - address:
      socket_address:
        address: "::"
        port_value: 5678
    filter_chains:
    - filters:
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: ingress_tcp
          cluster: backend5678ipv6
          access_log:
            - name: envoy.access_loggers.file
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /tmp/access.log
                json_format: {
                  "start_time": "%START_TIME%",
                  "duration": "%DURATION%",
                  "bytes_sent": "%BYTES_SENT%",
                  "bytes_received": "%BYTES_RECEIVED%",
                  "client_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
                  "upstream_cluster": "%UPSTREAM_CLUSTER%"
                }
      
  clusters:
  - name: backend5677
    connect_timeout: 0.25s
    type: strict_dns
    circuit_breakers:
        thresholds:
            max_connections: 1024
    lb_policy: round_robin
    load_assignment:
      cluster_name: backend5677
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 10.101.1.101
                port_value: 5677
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        unhealthy_threshold: 3
        healthy_threshold: 3
        tcp_health_check: {}
        no_traffic_interval: 5s
  - name: backend5678
    connect_timeout: 0.25s
    type: strict_dns
    circuit_breakers:
        thresholds:
            max_connections: 1024
    lb_policy: round_robin
    load_assignment:
      cluster_name: backend5678
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 10.101.1.101
                port_value: 5678
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        unhealthy_threshold: 3
        healthy_threshold: 3
        tcp_health_check: {}
        no_traffic_interval: 5s
  - name: backend5677ipv6
    connect_timeout: 0.25s
    type: strict_dns
    circuit_breakers:
        thresholds:
            max_connections: 1024
    lb_policy: round_robin
    load_assignment:
      cluster_name: backend5677ipv6
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: fc00:101:ecec:1::65
                port_value: 5677
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        unhealthy_threshold: 3
        healthy_threshold: 3
        tcp_health_check: {}
        no_traffic_interval: 5s
  - name: backend5678ipv6
    connect_timeout: 0.25s
    type: strict_dns
    circuit_breakers:
        thresholds:
            max_connections: 1024
    lb_policy: round_robin
    load_assignment:
      cluster_name: backend5678ipv6
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: fc00:101:ecec:1::65
                port_value: 5678
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        unhealthy_threshold: 3
        healthy_threshold: 3
        tcp_health_check: {}
        no_traffic_interval: 5s
admin:
  access_log_path: "/tmp/admin.log"
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 65121
